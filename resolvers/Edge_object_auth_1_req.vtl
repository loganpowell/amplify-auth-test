## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#if( $util.authType() == "IAM Authorization" )
$util.unauthorized()
#end
#if( $util.authType() == "User Pool Authorization" )
  #if( !$isAuthorized )
    #set( $staticGroupRoles = [{"claim":"cognito:groups","entity":"Admins"},{"claim":"cognito:groups","entity":"Writers"},{"claim":"cognito:groups","entity":"SuperAdmins"}] )
    #foreach( $groupRole in $staticGroupRoles )
      #set( $groupsInToken = $util.defaultIfNull($ctx.identity.claims.get($groupRole.claim), []) )
      #if( $groupsInToken.contains($groupRole.entity) )
        #set( $isAuthorized = true )
        #break
      #end
    #end
  #end
  #if( !$isAuthorized )
    #set( $authFilter = [] )
    #set( $role0 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
    #if( $role0 != "___xamznone____" )
      $util.qr($authFilter.add({"owner": { "eq": $role0 }}))
    #end
    #set( $role1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
    #if( $role1 != "___xamznone____" )
      $util.qr($authFilter.add({"readers": { "eq": $role1 }}))
    #end
    #set( $role2 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
    #if( $role2 != "___xamznone____" )
      $util.qr($authFilter.add({"writers": { "eq": $role2 }}))
    #end
    #set( $role3 = $util.defaultIfNull($ctx.identity.claims.get("cognito:groups"), []) )
    #if( $util.isString($role3) )
      #if( $util.isList($util.parseJson($role3)) )
        #set( $role3 = $util.parseJson($role3) )
      #else
        #set( $role3 = [$role3] )
      #end
    #end
    #if( !$role3.isEmpty() )
      $util.qr($authFilter.add({ "readerGroups": { "in": $role3 } }))
    #end
    #set( $role4 = $util.defaultIfNull($ctx.identity.claims.get("cognito:groups"), []) )
    #if( $util.isString($role4) )
      #if( $util.isList($util.parseJson($role4)) )
        #set( $role4 = $util.parseJson($role4) )
      #else
        #set( $role4 = [$role4] )
      #end
    #end
    #if( !$role4.isEmpty() )
      $util.qr($authFilter.add({ "writerGroups": { "in": $role4 } }))
    #end
    #if( !$authFilter.isEmpty() )
      $util.qr($ctx.stash.put("authFilter", { "or": $authFilter }))
    #end
  #end
#end
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **